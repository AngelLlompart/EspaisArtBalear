package spdvi;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import com.azure.core.util.Context;
import com.azure.storage.blob.BlobClient;
import com.azure.storage.blob.BlobContainerClient;
import com.azure.storage.blob.models.BlobHttpHeaders;
import com.azure.storage.blob.models.BlobRange;
import com.azure.storage.blob.models.DownloadRetryOptions;
import com.azure.storage.blob.specialized.BlockBlobClient;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import java.time.Duration;
import spdvi.dialogs.Login;
import spdvi.dialogs.Visualitzar;
import spdvi.pojos.Espai;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import java.util.stream.Collectors;
import javax.imageio.ImageIO;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JCheckBox;
import javax.swing.JFileChooser;
import javax.swing.JList;
import javax.swing.JOptionPane;
import spdvi.dialogs.MyProfile;
import spdvi.helpers.ArgumentNullException;
import spdvi.helpers.DataAccess;
import spdvi.helpers.ImageHelper;
import spdvi.pojos.Imatge;

/**
 *
 * @author angel
 */
public class MainForm extends javax.swing.JFrame implements Runnable{
    private JList<Espai> lstEspais;
    private ArrayList<JCheckBox> chkListModalitats;
    private ArrayList<JCheckBox> chkListServeis;
    private Thread downloadThread;
    private ArrayList<String> images = new ArrayList<>();
    private DefaultListModel imageListModel = new DefaultListModel();
    private boolean inserted = false;
           
    /**
     * Creates new form MainForm
     */
    public MainForm() {
        initComponents();
        lstEspais = new JList<Espai>();
        scrEspais.setViewportView(lstEspais);
        chkListModalitats = new ArrayList<>();
        chkListModalitats.add(chkEscultura);
        chkListModalitats.add(chkFotografia);
        chkListModalitats.add(chkPintura);
        chkListModalitats.add(chkVidre);
        chkListModalitats.add(chkVideo);
        
        chkListServeis = new ArrayList<>();
        chkListServeis.add(chkAcces);
        chkListServeis.add(chkAparcament);
        chkListServeis.add(chkArxiu);
        chkListServeis.add(chkBiblioteca);
        chkListServeis.add(chkCafeteria);
        chkListServeis.add(chkConcerts);
        chkListServeis.add(chkConferencies);
        chkListServeis.add(chkTallers);
        chkListServeis.add(chkVisites);
        chkListServeis.add(chkJardins);
        chkListServeis.add(chkWifi);        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton4 = new javax.swing.JButton();
        tabCRUD = new javax.swing.JTabbedPane();
        pnlRead = new javax.swing.JPanel();
        scrEspais = new javax.swing.JScrollPane();
        btnRead = new javax.swing.JButton();
        btnVisualitzar = new javax.swing.JButton();
        btnCercar = new javax.swing.JButton();
        btnMyProfile = new javax.swing.JButton();
        pnlInsert = new javax.swing.JPanel();
        lblNomEspai = new javax.swing.JLabel();
        txtNomEspai = new javax.swing.JTextField();
        lblRegistreEspai = new javax.swing.JLabel();
        txtRegistreEspai = new javax.swing.JTextField();
        lblDescripcions = new javax.swing.JLabel();
        cmbDesc = new javax.swing.JComboBox<>();
        layeredDescendent = new javax.swing.JLayeredPane();
        pnlCatala = new javax.swing.JPanel();
        scrCatala = new javax.swing.JScrollPane();
        txaCatala = new javax.swing.JTextArea();
        pnlCastella = new javax.swing.JPanel();
        scrCastella = new javax.swing.JScrollPane();
        txaCastella = new javax.swing.JTextArea();
        pnlAngles = new javax.swing.JPanel();
        scrAngles = new javax.swing.JScrollPane();
        txaAngles = new javax.swing.JTextArea();
        lblMunicipi = new javax.swing.JLabel();
        txtMunicipi = new javax.swing.JTextField();
        lblAdreca = new javax.swing.JLabel();
        txtAdreca = new javax.swing.JTextField();
        lblEmail = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        lblWeb = new javax.swing.JLabel();
        txtWeb = new javax.swing.JTextField();
        lblTelefon = new javax.swing.JLabel();
        txtTelefon = new javax.swing.JTextField();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 32767));
        pnlModalitats = new javax.swing.JPanel();
        chkPintura = new javax.swing.JCheckBox();
        chkEscultura = new javax.swing.JCheckBox();
        chkFotografia = new javax.swing.JCheckBox();
        chkVidre = new javax.swing.JCheckBox();
        chkVideo = new javax.swing.JCheckBox();
        chkSelectAllMod = new javax.swing.JCheckBox();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        lblGestor = new javax.swing.JLabel();
        txtGestor = new javax.swing.JTextField();
        pnlServeis = new javax.swing.JPanel();
        chkAcces = new javax.swing.JCheckBox();
        chkCafeteria = new javax.swing.JCheckBox();
        chkBiblioteca = new javax.swing.JCheckBox();
        chkAparcament = new javax.swing.JCheckBox();
        chkTallers = new javax.swing.JCheckBox();
        chkVisites = new javax.swing.JCheckBox();
        chkArxiu = new javax.swing.JCheckBox();
        chkConcerts = new javax.swing.JCheckBox();
        chkConferencies = new javax.swing.JCheckBox();
        chkWifi = new javax.swing.JCheckBox();
        chkSelectAllServ = new javax.swing.JCheckBox();
        chkJardins = new javax.swing.JCheckBox();
        jSeparator2 = new javax.swing.JSeparator();
        btnInsert = new javax.swing.JButton();
        lblImageIcon = new javax.swing.JLabel();
        btnUpload = new javax.swing.JButton();
        lblimages = new javax.swing.JLabel();
        txtImage = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstImages = new javax.swing.JList<>();
        jProgressBar1 = new javax.swing.JProgressBar();
        btnBorrar = new javax.swing.JButton();
        lblTipus = new javax.swing.JLabel();
        cmbTipus = new javax.swing.JComboBox<>();
        pnlModify = new javax.swing.JPanel();

        jButton4.setText("jButton4");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        pnlRead.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnRead.setText("Read");
        btnRead.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReadActionPerformed(evt);
            }
        });

        btnVisualitzar.setText("Visualitzar");
        btnVisualitzar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVisualitzarActionPerformed(evt);
            }
        });

        btnCercar.setText("Cercar");
        btnCercar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCercarActionPerformed(evt);
            }
        });

        btnMyProfile.setText("My Profile");
        btnMyProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMyProfileActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlReadLayout = new javax.swing.GroupLayout(pnlRead);
        pnlRead.setLayout(pnlReadLayout);
        pnlReadLayout.setHorizontalGroup(
            pnlReadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlReadLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlReadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnVisualitzar)
                    .addGroup(pnlReadLayout.createSequentialGroup()
                        .addComponent(scrEspais, javax.swing.GroupLayout.PREFERRED_SIZE, 487, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(pnlReadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlReadLayout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(btnRead, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlReadLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnCercar, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(18, 18, 18)
                .addComponent(btnMyProfile, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
                .addGap(18, 18, 18))
        );
        pnlReadLayout.setVerticalGroup(
            pnlReadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlReadLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlReadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlReadLayout.createSequentialGroup()
                        .addGroup(pnlReadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnRead)
                            .addComponent(btnMyProfile))
                        .addGap(18, 18, 18)
                        .addComponent(btnVisualitzar)
                        .addGap(18, 18, 18)
                        .addComponent(btnCercar)
                        .addGap(0, 494, Short.MAX_VALUE))
                    .addComponent(scrEspais))
                .addContainerGap())
        );

        tabCRUD.addTab("Read", pnlRead);

        pnlInsert.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblNomEspai.setText("Nom");

        lblRegistreEspai.setText("Registre");

        lblDescripcions.setText("Descripcions");

        cmbDesc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Català", "Español", "English" }));
        cmbDesc.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbDescItemStateChanged(evt);
            }
        });
        cmbDesc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbDescActionPerformed(evt);
            }
        });
        cmbDesc.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                cmbDescPropertyChange(evt);
            }
        });

        txaCatala.setColumns(20);
        txaCatala.setRows(5);
        scrCatala.setViewportView(txaCatala);

        txaCastella.setColumns(20);
        txaCastella.setRows(5);
        scrCastella.setViewportView(txaCastella);

        txaAngles.setColumns(20);
        txaAngles.setRows(5);
        scrAngles.setViewportView(txaAngles);

        javax.swing.GroupLayout pnlAnglesLayout = new javax.swing.GroupLayout(pnlAngles);
        pnlAngles.setLayout(pnlAnglesLayout);
        pnlAnglesLayout.setHorizontalGroup(
            pnlAnglesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAnglesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scrAngles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlAnglesLayout.setVerticalGroup(
            pnlAnglesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAnglesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scrAngles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlCastellaLayout = new javax.swing.GroupLayout(pnlCastella);
        pnlCastella.setLayout(pnlCastellaLayout);
        pnlCastellaLayout.setHorizontalGroup(
            pnlCastellaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlCastellaLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(pnlAngles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(pnlCastellaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlCastellaLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(scrCastella, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        pnlCastellaLayout.setVerticalGroup(
            pnlCastellaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlAngles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(pnlCastellaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlCastellaLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(scrCastella, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout pnlCatalaLayout = new javax.swing.GroupLayout(pnlCatala);
        pnlCatala.setLayout(pnlCatalaLayout);
        pnlCatalaLayout.setHorizontalGroup(
            pnlCatalaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlCatalaLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(pnlCastella, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(pnlCatalaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlCatalaLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(scrCatala, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        pnlCatalaLayout.setVerticalGroup(
            pnlCatalaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCatalaLayout.createSequentialGroup()
                .addComponent(pnlCastella, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 11, Short.MAX_VALUE))
            .addGroup(pnlCatalaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlCatalaLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(scrCatala, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        layeredDescendent.setLayer(pnlCatala, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout layeredDescendentLayout = new javax.swing.GroupLayout(layeredDescendent);
        layeredDescendent.setLayout(layeredDescendentLayout);
        layeredDescendentLayout.setHorizontalGroup(
            layeredDescendentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlCatala, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layeredDescendentLayout.setVerticalGroup(
            layeredDescendentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layeredDescendentLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlCatala, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        lblMunicipi.setText("Municipi");

        lblAdreca.setText("Adreça");

        txtAdreca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAdrecaActionPerformed(evt);
            }
        });

        lblEmail.setText("Email");

        lblWeb.setText("Web");

        lblTelefon.setText("Telefon");

        txtTelefon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTelefonActionPerformed(evt);
            }
        });

        pnlModalitats.setBorder(javax.swing.BorderFactory.createTitledBorder("Modalitats"));

        chkPintura.setText("Pintura");
        chkPintura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkPinturaActionPerformed(evt);
            }
        });

        chkEscultura.setText("Escultura");
        chkEscultura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkEsculturaActionPerformed(evt);
            }
        });

        chkFotografia.setText("Fotografia");
        chkFotografia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkFotografiaActionPerformed(evt);
            }
        });

        chkVidre.setText("Vidre");
        chkVidre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkVidreActionPerformed(evt);
            }
        });

        chkVideo.setText("Video");
        chkVideo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkVideoActionPerformed(evt);
            }
        });

        chkSelectAllMod.setText("Select all");
        chkSelectAllMod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkSelectAllModActionPerformed(evt);
            }
        });

        jLabel2.setText("Sel·lecciona al menys 1:");

        javax.swing.GroupLayout pnlModalitatsLayout = new javax.swing.GroupLayout(pnlModalitats);
        pnlModalitats.setLayout(pnlModalitatsLayout);
        pnlModalitatsLayout.setHorizontalGroup(
            pnlModalitatsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlModalitatsLayout.createSequentialGroup()
                .addGroup(pnlModalitatsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(pnlModalitatsLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator1))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlModalitatsLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnlModalitatsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chkEscultura)
                            .addComponent(chkFotografia)
                            .addComponent(chkVidre)
                            .addComponent(chkVideo)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlModalitatsLayout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(chkSelectAllMod))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlModalitatsLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlModalitatsLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(chkPintura)))
                .addContainerGap(13, Short.MAX_VALUE))
        );
        pnlModalitatsLayout.setVerticalGroup(
            pnlModalitatsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlModalitatsLayout.createSequentialGroup()
                .addComponent(chkSelectAllMod)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 7, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(chkPintura)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkEscultura)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkFotografia)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkVidre)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkVideo)
                .addContainerGap())
        );

        lblGestor.setText("Gestor");

        txtGestor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGestorActionPerformed(evt);
            }
        });

        pnlServeis.setBorder(javax.swing.BorderFactory.createTitledBorder("Serveis"));

        chkAcces.setText("Accés discapacitats");
        chkAcces.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkAccesActionPerformed(evt);
            }
        });

        chkCafeteria.setText("Cafeteria");
        chkCafeteria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkCafeteriaActionPerformed(evt);
            }
        });

        chkBiblioteca.setText("Biblioteca");
        chkBiblioteca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkBibliotecaActionPerformed(evt);
            }
        });

        chkAparcament.setText("Aparcament");
        chkAparcament.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkAparcamentActionPerformed(evt);
            }
        });

        chkTallers.setText("Tallers");
        chkTallers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkTallersActionPerformed(evt);
            }
        });

        chkVisites.setText("Visites concertades");
        chkVisites.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkVisitesActionPerformed(evt);
            }
        });

        chkArxiu.setText("Arxiu");
        chkArxiu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkArxiuActionPerformed(evt);
            }
        });

        chkConcerts.setText("Concerts");

        chkConferencies.setText("Conferències");

        chkWifi.setText("Wifi");

        chkSelectAllServ.setText("Select all");
        chkSelectAllServ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkSelectAllServActionPerformed(evt);
            }
        });

        chkJardins.setText("Jardins");

        javax.swing.GroupLayout pnlServeisLayout = new javax.swing.GroupLayout(pnlServeis);
        pnlServeis.setLayout(pnlServeisLayout);
        pnlServeisLayout.setHorizontalGroup(
            pnlServeisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlServeisLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlServeisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlServeisLayout.createSequentialGroup()
                        .addGroup(pnlServeisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chkVisites)
                            .addGroup(pnlServeisLayout.createSequentialGroup()
                                .addGroup(pnlServeisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(chkAcces)
                                    .addComponent(chkCafeteria)
                                    .addComponent(chkBiblioteca)
                                    .addComponent(chkAparcament)
                                    .addComponent(chkTallers))
                                .addGap(18, 18, 18)
                                .addGroup(pnlServeisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(chkJardins)
                                    .addComponent(chkWifi)
                                    .addComponent(chkConferencies)
                                    .addComponent(chkArxiu)
                                    .addComponent(chkConcerts)))
                            .addGroup(pnlServeisLayout.createSequentialGroup()
                                .addGap(77, 77, 77)
                                .addComponent(chkSelectAllServ)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        pnlServeisLayout.setVerticalGroup(
            pnlServeisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlServeisLayout.createSequentialGroup()
                .addComponent(chkSelectAllServ)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlServeisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkAcces)
                    .addComponent(chkArxiu))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlServeisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkCafeteria)
                    .addComponent(chkConcerts))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlServeisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkBiblioteca)
                    .addComponent(chkConferencies))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlServeisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkAparcament)
                    .addComponent(chkWifi))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlServeisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkTallers)
                    .addComponent(chkJardins))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkVisites))
        );

        btnInsert.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btnInsert.setText("INSERT");
        btnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertActionPerformed(evt);
            }
        });

        btnUpload.setText("Sel·leccionar");
        btnUpload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUploadActionPerformed(evt);
            }
        });

        lblimages.setText("Imatges");

        lstImages.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstImagesValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lstImages);

        jProgressBar1.setStringPainted(true);

        btnBorrar.setText("Borrar");
        btnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarActionPerformed(evt);
            }
        });

        lblTipus.setText("Tipus");

        cmbTipus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Museu", "Galeria", "Centre Cultural" }));
        cmbTipus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTipusActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlInsertLayout = new javax.swing.GroupLayout(pnlInsert);
        pnlInsert.setLayout(pnlInsertLayout);
        pnlInsertLayout.setHorizontalGroup(
            pnlInsertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInsertLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(pnlInsertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlInsertLayout.createSequentialGroup()
                        .addGroup(pnlInsertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pnlInsertLayout.createSequentialGroup()
                                .addComponent(pnlServeis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pnlModalitats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlInsertLayout.createSequentialGroup()
                                .addGroup(pnlInsertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnlInsertLayout.createSequentialGroup()
                                        .addGroup(pnlInsertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblAdreca)
                                            .addComponent(lblEmail)
                                            .addComponent(lblWeb))
                                        .addGap(30, 30, 30)
                                        .addGroup(pnlInsertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtAdreca, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                                            .addComponent(txtEmail, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(txtWeb)))
                                    .addGroup(pnlInsertLayout.createSequentialGroup()
                                        .addGroup(pnlInsertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblTelefon)
                                            .addComponent(lblGestor))
                                        .addGap(28, 28, 28)
                                        .addGroup(pnlInsertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtTelefon, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                                            .addComponent(txtGestor)))
                                    .addGroup(pnlInsertLayout.createSequentialGroup()
                                        .addGroup(pnlInsertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblRegistreEspai)
                                            .addComponent(lblNomEspai)
                                            .addComponent(lblMunicipi))
                                        .addGap(24, 24, 24)
                                        .addGroup(pnlInsertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtRegistreEspai, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                                            .addComponent(txtMunicipi)
                                            .addComponent(txtNomEspai))))
                                .addGap(32, 32, 32)
                                .addGroup(pnlInsertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnlInsertLayout.createSequentialGroup()
                                        .addComponent(lblDescripcions)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(cmbDesc, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(layeredDescendent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(pnlInsertLayout.createSequentialGroup()
                                        .addComponent(lblTipus)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(cmbTipus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGroup(pnlInsertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlInsertLayout.createSequentialGroup()
                                .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(pnlInsertLayout.createSequentialGroup()
                                .addGroup(pnlInsertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnlInsertLayout.createSequentialGroup()
                                        .addGap(28, 28, 28)
                                        .addGroup(pnlInsertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblimages)
                                            .addGroup(pnlInsertLayout.createSequentialGroup()
                                                .addGroup(pnlInsertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                    .addComponent(txtImage, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE)
                                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                                                .addGap(18, 18, 18)
                                                .addGroup(pnlInsertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(btnUpload, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(btnBorrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                                    .addGroup(pnlInsertLayout.createSequentialGroup()
                                        .addGap(68, 68, 68)
                                        .addGroup(pnlInsertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(lblImageIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlInsertLayout.createSequentialGroup()
                        .addComponent(btnInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        pnlInsertLayout.setVerticalGroup(
            pnlInsertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInsertLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(pnlInsertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlInsertLayout.createSequentialGroup()
                        .addGroup(pnlInsertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlInsertLayout.createSequentialGroup()
                                .addGroup(pnlInsertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblNomEspai)
                                    .addComponent(txtNomEspai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(pnlInsertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblRegistreEspai)
                                    .addComponent(txtRegistreEspai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(pnlInsertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblMunicipi)
                                    .addComponent(txtMunicipi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(pnlInsertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblAdreca)
                                    .addComponent(txtAdreca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(pnlInsertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblEmail)
                                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(pnlInsertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblWeb)
                                    .addComponent(txtWeb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(pnlInsertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblTelefon)
                                    .addComponent(txtTelefon, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(pnlInsertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblGestor)
                                    .addComponent(txtGestor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(pnlInsertLayout.createSequentialGroup()
                                .addGroup(pnlInsertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnlInsertLayout.createSequentialGroup()
                                        .addGap(12, 12, 12)
                                        .addComponent(layeredDescendent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(pnlInsertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lblDescripcions)
                                        .addComponent(cmbDesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnlInsertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblTipus)
                                    .addComponent(cmbTipus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 94, Short.MAX_VALUE)
                        .addGroup(pnlInsertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(pnlServeis, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pnlModalitats, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addGap(14, 14, 14)
                        .addComponent(btnInsert)
                        .addGap(11, 11, 11))
                    .addGroup(pnlInsertLayout.createSequentialGroup()
                        .addComponent(lblimages)
                        .addGap(18, 18, 18)
                        .addGroup(pnlInsertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtImage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnUpload))
                        .addGap(19, 19, 19)
                        .addGroup(pnlInsertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnBorrar)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblImageIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(11, 11, 11))
        );

        pnlModalitats.getAccessibleContext().setAccessibleName("Modalitats (Sel·lecciona almenys 1)");

        tabCRUD.addTab("Insert", pnlInsert);

        javax.swing.GroupLayout pnlModifyLayout = new javax.swing.GroupLayout(pnlModify);
        pnlModify.setLayout(pnlModifyLayout);
        pnlModifyLayout.setHorizontalGroup(
            pnlModifyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 786, Short.MAX_VALUE)
        );
        pnlModifyLayout.setVerticalGroup(
            pnlModifyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 625, Short.MAX_VALUE)
        );

        tabCRUD.addTab("Modify", pnlModify);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabCRUD)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabCRUD)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        Login l = new Login(this, true);
        l.setVisible(true);
        if(!l.getLoginUser().isAdmin()){
            tabCRUD.setEnabledAt(1, false);
            tabCRUD.setEnabledAt(2, false);
        }
        pnlCastella.setVisible(false);
        pnlAngles.setVisible(false);
    }//GEN-LAST:event_formWindowOpened

    private void btnReadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReadActionPerformed
        DataAccess da = new DataAccess();
        DefaultListModel<Espai> defaultListModel = new DefaultListModel<>();
        for(Espai e: da.getEspais()){
            defaultListModel.addElement(e);
        }
        lstEspais.setModel(defaultListModel);
    }//GEN-LAST:event_btnReadActionPerformed

    private void txtAdrecaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAdrecaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAdrecaActionPerformed

    private void txtTelefonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTelefonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTelefonActionPerformed

    private void chkSelectAllModActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkSelectAllModActionPerformed
        if(chkSelectAllMod.isSelected()){
            for(JCheckBox chkBox : chkListModalitats){
                chkBox.setSelected(true);
            }
        }else{
          for(JCheckBox chkBox : chkListModalitats){
                chkBox.setSelected(false);
          }  
        }
    }//GEN-LAST:event_chkSelectAllModActionPerformed

    private void chkPinturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkPinturaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkPinturaActionPerformed

    private void chkEsculturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkEsculturaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkEsculturaActionPerformed

    private void chkFotografiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkFotografiaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkFotografiaActionPerformed

    private void chkVidreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkVidreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkVidreActionPerformed

    private void chkVideoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkVideoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkVideoActionPerformed

    private void txtGestorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGestorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGestorActionPerformed

    private void chkSelectAllServActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkSelectAllServActionPerformed
        if(chkSelectAllServ.isSelected()){
            for(JCheckBox chkBox : chkListServeis){
                chkBox.setSelected(true);
            }
        }else{
          for(JCheckBox chkBox : chkListServeis){
                chkBox.setSelected(false);
          }  
        }
    }//GEN-LAST:event_chkSelectAllServActionPerformed

    private void chkAccesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkAccesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkAccesActionPerformed

    private void chkCafeteriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkCafeteriaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkCafeteriaActionPerformed

    private void chkBibliotecaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkBibliotecaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkBibliotecaActionPerformed

    private void chkAparcamentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkAparcamentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkAparcamentActionPerformed

    private void chkTallersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkTallersActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkTallersActionPerformed

    private void chkVisitesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkVisitesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkVisitesActionPerformed

    private void chkArxiuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkArxiuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkArxiuActionPerformed

    private void btnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertActionPerformed
        DataAccess da = new DataAccess();
        boolean insert = true;
        //String descripcions = "Cat: " + txaCatala.getText() + ";" + " Cast: " + txaCastella.getText() + ";" + " Eng: " + txaAngles.getText() + ";";
        LinkedHashMap<String, String> descripcions = new LinkedHashMap<>();
        descripcions.put("cat", txaCatala.getText());
        descripcions.put("esp", txaCastella.getText());
        descripcions.put("eng", txaAngles.getText());
        
        Pattern emailRegEx = Pattern.compile("^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$");
        Pattern webRegEx = Pattern.compile("(www\\.)[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,4}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)|(www\\.)?(?!ww)[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,4}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)");
        String modalitats = "";
        String error = "";
        try{
            if(txtRegistreEspai.getText() == null || txtRegistreEspai.getText().isBlank() || txtRegistreEspai.getText().isEmpty() ||
               txtAdreca.getText() == null || txtAdreca.getText().isBlank() || txtAdreca.getText().isEmpty() ||
               txtEmail.getText() == null || txtEmail.getText().isBlank() || txtEmail.getText().isEmpty() ||
               txtGestor.getText() == null || txtGestor.getText().isBlank() || txtGestor.getText().isEmpty() ||
               txtMunicipi.getText() == null || txtMunicipi.getText().isBlank() || txtMunicipi.getText().isEmpty() ||
               txtNomEspai.getText() == null || txtNomEspai.getText().isBlank() || txtNomEspai.getText().isEmpty() ||
               txtWeb.getText() == null || txtWeb.getText().isBlank() || txtWeb.getText().isEmpty() ||
               txtTelefon.getText() == null || txtTelefon.getText().isBlank() || txtTelefon.getText().isEmpty()) {
                error += "Els atributs no poden ser nulls o buits" + System.lineSeparator();
                //throw new ArgumentNullException(error);
            }
            
            if(txaCastella.getText() == null || txaCastella.getText().isBlank() || txaCastella.getText().isEmpty() ||
               txaCatala.getText() == null || txaCatala.getText().isBlank() || txaCatala.getText().isEmpty() ||
               txaAngles.getText() == null || txaAngles.getText().isBlank() || txaAngles.getText().isEmpty()) {
                error += "S'han d'omplir les descripcions en els 3 idiomes" + System.lineSeparator();
                //throw new ArgumentNullException(error);
            }
            
            for(Espai espai : da.getEspais()){
                if(txtRegistreEspai.getText().equals(espai.getRegistre())){
                    error += "No es pot repetir un nombre de registre" + System.lineSeparator();
                    //throw new ArgumentNullException(error);
                }
            }
            
            if(images.isEmpty()){
                error += "Has d'introduïr 1 imatge com a mínim"  + System.lineSeparator();
                //throw new ArgumentNullException(error);
            }
            
            try{
                Integer.parseInt(txtTelefon.getText());
                if(txtTelefon.getText().length() != 9){
                    error += "El telèfon ha de ser un número vàlid" + System.lineSeparator();
                    //throw new ArgumentNullException(error);
                }
            }catch(Exception e){
                error += "El telèfon ha de ser un número vàlid" + System.lineSeparator();
            }
            
            for(JCheckBox checkBox : chkListModalitats){
                if(checkBox.isSelected()){
                    modalitats += checkBox.getText() + ",";
                }
            }
            
            if(modalitats.isBlank() || modalitats.isBlank() || modalitats == null){
                error += "Al menys una modalitat ha de ser seleccionada"  + System.lineSeparator();
                //throw new ArgumentNullException(error);
            }
            modalitats = modalitats.substring(0, modalitats.length() - 1);
            
            if(!(emailRegEx.matcher(txtEmail.getText()).matches()) || !(emailRegEx.matcher(txtGestor.getText()).matches())){
                error += "Tant email com gestor han d'estar en un format d'email correcte";
            }
            
            if(!(webRegEx.matcher(txtWeb.getText()).matches())){
                error += "Web ha d'estar en el següent format: www.text.com";
            }
            
            if(!(error.isEmpty() || error.isBlank() || error == null)){
                throw new ArgumentNullException(error);
            }
        } catch (Exception e){
            insert = false;
            System.err.println(error);
            JOptionPane.showMessageDialog(null,
            error,
            "Error",
            JOptionPane.ERROR_MESSAGE);
        }
        
        String serveis = "";
        for(JCheckBox checkBox : chkListServeis){
            if(checkBox.isSelected()){
                serveis += checkBox.getText() + ",";
            }
        }
        if(!(serveis.isBlank() || serveis.isEmpty() || serveis == null)) {
            serveis = serveis.substring(0, serveis.length() - 1);
        }

        if(insert){
            Espai espai = new Espai(txtNomEspai.getText(),
                    txtRegistreEspai.getText(),
                    descripcions,
                    txtMunicipi.getText(),
                    txtAdreca.getText(),
                    txtEmail.getText(),
                    txtWeb.getText(),
                    Integer.parseInt(txtTelefon.getText()),
                    cmbTipus.getSelectedItem().toString(),
                    modalitats,
                    txtGestor.getText(),
                    serveis);
            int res = da.insertEspais(espai);
            String espaiImg = espai.getRegistre();
            int contador = 1;
            for(String imatge : images) {
                String id = espaiImg + "_" + contador;
                Imatge newImage = new Imatge(id, imatge, espaiImg);
                da.insertImage(newImage);
                contador++;
            };
            if (res != 0){
                inserted = true;
                JOptionPane.showMessageDialog(null,
                "S'ha introduït el espai correctament",
                "Info",
                JOptionPane.INFORMATION_MESSAGE);
                txtRegistreEspai.setText("");
                images.clear();
                imageListModel.clear();
                lstImages.setModel(imageListModel);
            }
        }
    }//GEN-LAST:event_btnInsertActionPerformed

    private void btnVisualitzarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVisualitzarActionPerformed
        if(!(lstEspais.getSelectedValue() == null)){
            Visualitzar visualitzar = new Visualitzar(this, true);
            visualitzar.setSelectedEspai(lstEspais.getSelectedValue());
            visualitzar.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(null,
            "No s'ha seleccionat cap espai per a visualitzar",
            "Info",
            JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnVisualitzarActionPerformed

    private void btnCercarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCercarActionPerformed
        
    }//GEN-LAST:event_btnCercarActionPerformed

    private void btnMyProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMyProfileActionPerformed
        MyProfile mp = new MyProfile(this, true);
        mp.setVisible(true);
    }//GEN-LAST:event_btnMyProfileActionPerformed

    private void btnUploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUploadActionPerformed
        //DefaultListModel imageListModel = new DefaultListModel();
        JFileChooser fileChooser = new JFileChooser();
        Boolean status = true;
        BlobContainerClient blobContainerClient = ImageHelper.getContainerClient();
        int returnValue = fileChooser.showOpenDialog(this);
        if (returnValue == JFileChooser.APPROVE_OPTION){
            try {
                status = ImageHelper.isJPEG(fileChooser.getSelectedFile().getAbsoluteFile());
            } catch (Exception ex) {
               ex.printStackTrace();
            }
            if(status){
                if(!(blobContainerClient.getBlobClient(fileChooser.getSelectedFile().getName()).exists())) {
                    BlobClient blobClient = blobContainerClient.getBlobClient(fileChooser.getSelectedFile().getName());
                    txtImage.setText(fileChooser.getSelectedFile().getAbsolutePath());
                    try {
                        BufferedImage bufferedImage = ImageIO.read(fileChooser.getSelectedFile().getAbsoluteFile());
                        ByteArrayOutputStream baos = new ByteArrayOutputStream();
                        ImageIO.write(bufferedImage, "jpg", baos);
                        ByteArrayInputStream bais = new ByteArrayInputStream(baos.toByteArray());
                        blobClient.upload(bais, baos.size());
                        BlobHttpHeaders headers = new BlobHttpHeaders();
                        headers.setContentType("image/jpeg");
                        blobClient.setHttpHeaders(headers);
                        baos.close();
                        bais.close();
                        images.add(fileChooser.getSelectedFile().getName());
                        /*
                        for(String image : images){
                            imageListModel.addElement(image);
                        }
                        */
                        imageListModel.addElement(fileChooser.getSelectedFile().getName());
                        lstImages.setModel(imageListModel);
                    } catch (IOException ios) {
                        ios.printStackTrace();
                    }
                } else {
                    JOptionPane.showMessageDialog(null,
                    "La imatge que es vol introduïr ja existeix",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(null,
                "La imatge que es vol introduïr ha d'estar en format jpg",
                "Error",
                JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnUploadActionPerformed

    
    
    private void lstImagesValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstImagesValueChanged
        if (!evt.getValueIsAdjusting()) {  //This line prevents double events when selecting by click
            downloadThread = new Thread(this);
            downloadThread.start();
            lblImageIcon.setIcon(new ImageIcon(Visualitzar.class.getClassLoader().getResource("resizedloader.gif")));
        }
    }//GEN-LAST:event_lstImagesValueChanged

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        if(!inserted){
            BlobContainerClient container =  ImageHelper.getContainerClient();
            for(String image : images){
                container.getBlobClient(image).delete();
            }
        }
    }//GEN-LAST:event_formWindowClosing

    private void btnBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarActionPerformed
        String selectedImage = lstImages.getSelectedValue();
        if(!(lstImages.getSelectedValue() == null)){
            ImageHelper.getContainerClient().getBlobClient(selectedImage).delete();
            images.remove(selectedImage);
            imageListModel.remove(lstImages.getSelectedIndex());
            lstImages.setModel(imageListModel);
        }
    }//GEN-LAST:event_btnBorrarActionPerformed

    private void cmbTipusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTipusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbTipusActionPerformed

    private void cmbDescPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_cmbDescPropertyChange

    }//GEN-LAST:event_cmbDescPropertyChange

    private void cmbDescActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbDescActionPerformed
        switch(cmbDesc.getSelectedItem().toString()){
            case "Català" -> {
                pnlCastella.setVisible(false);
                pnlAngles.setVisible(false);
            }
            case "Español" -> {
                pnlCastella.setVisible(true);
                pnlAngles.setVisible(false);
            }
            case "English" -> {
                pnlCastella.setVisible(true);
                pnlAngles.setVisible(true);
            }
        }
    }//GEN-LAST:event_cmbDescActionPerformed

    private void cmbDescItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbDescItemStateChanged

    }//GEN-LAST:event_cmbDescItemStateChanged

    @Override
    public void run() {
        System.out.println(Thread.currentThread().getName());
        downloadImage();
    }
    
    private void downloadImage() {
    // Downloading big images in chunks of 1kB might be very slow because of the request overhead to azure. Modify the algorithm to donwload eavery image in, for instance 20 chunks.

        ByteArrayOutputStream outputStream;
        BufferedImage originalImage;
        try {
            BlockBlobClient blobClient = ImageHelper.getContainerClient().getBlobClient(lstImages.getSelectedValue()).getBlockBlobClient();
            int dataSize = (int) blobClient.getProperties().getBlobSize();
            int numberOfBlocks = 20;
            int numberOfBPerBlock = dataSize / numberOfBlocks;  // Split every image in 20 blocks. That is, make 20 requests to Azure.
            System.out.println("Starting download of " + dataSize + " bytes in " + numberOfBlocks + " " + numberOfBPerBlock/1024 + "kB chunks");

            
            int i = 0;
            outputStream = new ByteArrayOutputStream(dataSize);

            while (i < numberOfBlocks) {
                BlobRange range = new BlobRange(i * numberOfBPerBlock, (long)numberOfBPerBlock);
                DownloadRetryOptions options = new DownloadRetryOptions().setMaxRetryRequests(5);

                System.out.println(i + ": Downloading bytes " + range.getOffset() + " to " + (range.getOffset() + range.getCount()) + " with status "
                        + blobClient.downloadStreamWithResponse(outputStream, range, options, null, false,
                                Duration.ofSeconds(30), Context.NONE));
                i++;
                jProgressBar1.setValue(i * jProgressBar1.getMaximum() / (numberOfBlocks + 1));
            }

            // Download the last bytes of the image
            BlobRange range = new BlobRange(i * numberOfBPerBlock);
            DownloadRetryOptions options = new DownloadRetryOptions().setMaxRetryRequests(5);
            System.out.println(i + ": Downloading bytes " + range.getOffset() + " to " + dataSize + " with status "
                    + blobClient.downloadStreamWithResponse(outputStream, range, options, null, false,
                            Duration.ofSeconds(30), Context.NONE));
            i++;
            jProgressBar1.setValue(i * jProgressBar1.getMaximum() / (numberOfBlocks + 1));
            
            originalImage = ImageIO.read(new ByteArrayInputStream(outputStream.toByteArray()));
            ImageIcon icon = ImageHelper.resizeImageIcon(originalImage, lblImageIcon.getWidth(), lblImageIcon.getHeight());
            lblImageIcon.setIcon(icon);
            outputStream.close();
        } catch (IOException ioe) {
            ioe.printStackTrace();
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBorrar;
    private javax.swing.JButton btnCercar;
    private javax.swing.JButton btnInsert;
    private javax.swing.JButton btnMyProfile;
    private javax.swing.JButton btnRead;
    private javax.swing.JButton btnUpload;
    private javax.swing.JButton btnVisualitzar;
    private javax.swing.JCheckBox chkAcces;
    private javax.swing.JCheckBox chkAparcament;
    private javax.swing.JCheckBox chkArxiu;
    private javax.swing.JCheckBox chkBiblioteca;
    private javax.swing.JCheckBox chkCafeteria;
    private javax.swing.JCheckBox chkConcerts;
    private javax.swing.JCheckBox chkConferencies;
    private javax.swing.JCheckBox chkEscultura;
    private javax.swing.JCheckBox chkFotografia;
    private javax.swing.JCheckBox chkJardins;
    private javax.swing.JCheckBox chkPintura;
    private javax.swing.JCheckBox chkSelectAllMod;
    private javax.swing.JCheckBox chkSelectAllServ;
    private javax.swing.JCheckBox chkTallers;
    private javax.swing.JCheckBox chkVideo;
    private javax.swing.JCheckBox chkVidre;
    private javax.swing.JCheckBox chkVisites;
    private javax.swing.JCheckBox chkWifi;
    private javax.swing.JComboBox<String> cmbDesc;
    private javax.swing.JComboBox<String> cmbTipus;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLayeredPane layeredDescendent;
    private javax.swing.JLabel lblAdreca;
    private javax.swing.JLabel lblDescripcions;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblGestor;
    private javax.swing.JLabel lblImageIcon;
    private javax.swing.JLabel lblMunicipi;
    private javax.swing.JLabel lblNomEspai;
    private javax.swing.JLabel lblRegistreEspai;
    private javax.swing.JLabel lblTelefon;
    private javax.swing.JLabel lblTipus;
    private javax.swing.JLabel lblWeb;
    private javax.swing.JLabel lblimages;
    private javax.swing.JList<String> lstImages;
    private javax.swing.JPanel pnlAngles;
    private javax.swing.JPanel pnlCastella;
    private javax.swing.JPanel pnlCatala;
    private javax.swing.JPanel pnlInsert;
    private javax.swing.JPanel pnlModalitats;
    private javax.swing.JPanel pnlModify;
    private javax.swing.JPanel pnlRead;
    private javax.swing.JPanel pnlServeis;
    private javax.swing.JScrollPane scrAngles;
    private javax.swing.JScrollPane scrCastella;
    private javax.swing.JScrollPane scrCatala;
    private javax.swing.JScrollPane scrEspais;
    private javax.swing.JTabbedPane tabCRUD;
    private javax.swing.JTextArea txaAngles;
    private javax.swing.JTextArea txaCastella;
    private javax.swing.JTextArea txaCatala;
    private javax.swing.JTextField txtAdreca;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtGestor;
    private javax.swing.JTextField txtImage;
    private javax.swing.JTextField txtMunicipi;
    private javax.swing.JTextField txtNomEspai;
    private javax.swing.JTextField txtRegistreEspai;
    private javax.swing.JTextField txtTelefon;
    private javax.swing.JTextField txtWeb;
    // End of variables declaration//GEN-END:variables
}
